.TH FIXSMTPIO 8 2018-12-01
.SH NAME
fixsmtpio \- filter SMTP I/O and exit status
.SH SYNOPSIS
.B fixsmtpio
.I prog
.SH DESCRIPTION
.B fixsmtpio
is a proxy for changing how an SMTP service behaves without changing its code.
By default, with no configuration, it changes almost no observable behavior.
In a typical configuration, it makes
.B ofmipd
or
.B qmail-smtpd
behave as though they were designed to run under
.B authup
by adjusting certain
client requests,
server responses,
and exit codes.
The
.B "EXIT CODES"
section is important enough to be all the way up here.
.SH "EXIT CODES"
.B authup
expects
.B fixsmtpio
to exit 18
when
.I control/fixsmtpio
exists and fails to parse.
.B fixsmtpio
does so.

.B authup
expects distinct exit codes for distinct conditions.
Since
.B checkpassword
exits 1 when a password is unacceptable, and
.B ofmipd
and
.B qmail-smtpd
also exit 1 when any sort of error occurs,
.B fixsmtpio
can and should be configured to exit uniquely for each SMTP condition:
.TP 3
14
when the server greeting code starts with 4 (temporary failure),
.TP 3
15
when the server greeting code starts with 5 (permanent failure),
.TP 3
16
when the server times out,
and
.TP 3
0
when the server receives EOF from the client.
.SH "ENVIRONMENT VARIABLES"
When running under
.BR authup ,
the authenticated user is available as
.BR AUTHUP_USER .
Many typical filter rules operate only in the presence of this variable.
Other rules apply equally well to public SMTP service.

When running under
.B "sslserver -n"
or
.BR "s6-ucspitlsd" ,
.B fixsmtpio
can offer TLS.
Set
.B UCSPITLS
to the empty string to enable opportunistic server-to-server encryption.
(The special value
.B "!"
requires peers to negotiate TLS before doing much of anything else --
not likely useful for public SMTP service.)

If TLS has been negotiated,
.B fixsmtpio
sets
.BR FIXSMTPIOTLS .

If
.B DISABLETLS
is set, the presence and value of
.B UCSPITLS
will be ignored.

If
.B NOFIXSMTPIO
is set,
.B fixsmtpio
will simply replace itself with
.IR prog .

If
.B FIXSMTPIODEBUG
is set,
.B fixsmtpio
will show its work.
Lines are prefixed like so:
.TP 3
1: Request received from client
.TP 3
2: Request sent to server
.TP 3
3: Response received from server
.TP 3
4: Response sent to client
.TP 3
D: DATA received from client and sent to server as is

.SH "FILTER RULES"
Filter rules follow the format:

.I [env]:event:[request-prepend]:response-line-glob:[exitcode]:[response]

(Values other than
.I response
may not contain ":", the field separator.)
.TP 5
.I env
.br
(optional)
Environment variable which must be present for the rule to apply.
If empty, none is required.
.TP 5
.I event
.br
(required)
SMTP verb (or "clienteof", "greeting", or "timeout") to which the rule applies.
This field is matched case-insensitively.
.TP 5
.I request-prepend
.br
(optional)
String to prepend to the request before passing it to the server.
"NOOP " (with trailing space) causes the server to trivially accept a request,
performing no action.
If empty, the request is sent as is.
.TP 5
.I response-line-glob
.br
(required)
.BR fnmatch(3) -style
glob pattern, with no special options set.
Each line of the response is compared against this glob.
.TP 5
.I exitcode
.br
(optional)
Numeric code with which
.B fixsmtpio
is to exit immediately.
If empty, it will exit whenever it normally would.
If there are no rules specifying a value for this field,
.B fixsmtpio
will always exit with the same code as its child
.IR prog .
.TP 5
.I response
.br
(optional)
String that replaces every matching line of the server response.

If empty, matching lines are removed.

Strings starting with
"&fixsmtpio"
are reserved for special handling.

"&fixsmtpio_noop"
causes the response to be sent as is.

"&fixsmtpio_fixup"
computes the replacement string via an event-specific internal routine.
(If no corresponding routine exists,
.B fixsmtpio
will refuse to run.)
Routines exist for
.TP 10
.BR HELP :
.br
Prepend this program's home page,
in an attempt to direct support requests to
.BR AUTHOR .
Please enable it!
.TP 10
.BR "greeting",
.BR EHLO ,
.BR HELO ,
and
.BR QUIT :
.br
Include
.I smtpgreeting
in the response.
This is harmless with
.BR qmail-smtpd ,
which already does so,
and brings
.BR ofmipd 's
behavior up to par.
.TP 0
Rules are applied in the order written. For instance, if two rules
match, the later rule modifies the response returned by the
earlier rule.
If multiple matching rules for an event set
.BR exitcode ,
the last one wins.

Not all rules (alone or in combination) make practical sense.
An earlier rule can cause a later one to start (or stop) matching.
Keep your configuration as simple as possible, and test it well.
.SH "CONTROL FILES"
.TP 5
.I fixsmtpio
Filter rules as described in
.BR "FILTER RULES" .
Default: none.
.TP 5
.I smtpgreeting
SMTP greeting message.
Default:
.IR me ,
if that is supplied;
otherwise
.B fixsmtpio
will refuse to run.
The first word of
.I smtpgreeting
should be the current host's name.
.SH "COMPATIBILITY"
.B fixsmtpio
handles STARTTLS internally, terminating TLS in order to continue
observing requests and responses and do its job.
If you rely on STARTTLS support directly in
.B qmail-smtpd
via a patch,
please share your use case with the author.
.SH "EXAMPLES"
See
.IR https://schmonz.com/qmail/acceptutils .
.SH "AUTHOR"
.B Amitai Schleier <schmonz-web-acceptutils@schmonz.com>
.SH "SEE ALSO"
authup(8),
sslserver(1),
s6-ucspitlsd,
ucspi-tls(2),
checkpassword(8),
checknotroot(8),
qmail-smtpd(8),
ofmipd(8),
qmail-qfilter-queue(8),
fnmatch(3),
fixcrio(1),
spamdyke.
